# tmux config

# unbound
unbind C-b # prefix
unbind %   # split-window -v
unbind '"' # split-window -h
unbind h   # [pane selection]
unbind j
unbind k
unbind l
# bind
set -g prefix ` # perhaps not ideal
#bind Space send-prefix
bind C-Space last-window
bind C-d detach
bind C-c command-prompt -p command: "new window -n '%1' '%1'"
bind r source-file $HOME/.tmux.conf\; display-message "Configuration reloaded"
bind - split-window -v
bind \ split-window -h
bind Enter break-pane
# pane movement
## http://unix.stackexchange.com/questions/14300/tmux-move-window-to-pane
## http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h resize-pane -L
bind C-j resize-pane -D
bind C-k resize-pane -U
bind C-l resize-pane -R
# smart pane-switching with vim
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
set -g base-index 1
set -g pane-base-index 1
# function keys select windows (binding pane-/base-index to 1)
bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4
bind -n F5 select-window -t 5
bind -n F6 select-window -t 6
bind -n F7 select-window -t 7
bind -n F8 select-window -t 8
bind -n F9 select-window -t 9
bind -n F10 select-window -t 10

# layouts
# Default: all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# In this particular case, _Screen_ has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
# setw -g aggressive-resize on

# Vi keys
setw -g mode-keys vi
set -s escape-time 50

# Mouse support
#setw -g mode-mouse off
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# 256 colors
set -g default-terminal "screen-256color"
set -g pane-active-border-fg yellow

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# message bar
set -g message-attr bright
set -g message-bg black
set -g message-fg blue
set -g display-time 2000
set -g display-panes-time 2000

# window mode bar
#setw -g mode-bg white
#setw -g mode-fg black

# ttitle bar
set -g set-titles on
set -g set-titles-string '#T | #W #I[#P]'
# status bar
set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-interval 5 
set -g status-left-length 90
set -g status-right-length 60
set -g status-left '#[fg=Green]#(whoami)#[fg=white]::#[fg=blue]#(hostname -s) #[fg=yellow]$'
set -g status-justify left
set -g status-right '#[fg=Cyan]#S #[fg=white]%a %d %b %R'
#set -g status-right "{#[bold,fg=cyan]#(uptime | awk -F: '{print $(NF\\)}' | sed s/' '//)#[nobold,fg=default]} {#[bold,fg=cyan]%a %m/%d %H:%M%p#[nobold,fg=default]}"

# Site-specific config
source-file ~/.tmux.conf.local

